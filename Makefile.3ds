# Project: Wolf4SDL
# Makefile is modified from Lantus' / MVG's chocolate doom NX port and chocolate doom N3DS port by Anh302kay

ifeq ($(strip $(DEVKITARM)),)
$(error "Please set DEVKITARM in your environment. export DEVKITARM=<path to>devkitARM")
endif

TOPDIR ?= $(CURDIR)
include $(DEVKITARM)/3ds_rules
PORTLIBS    := $(DEVKITPRO)/portlibs/3ds
TARGET		:=	$(notdir $(CURDIR))
APP_TITLE := Wolf4SDL
APP_DESCRIPTION := Cross Plataform Source Port Of Wolfenstein 3d for Nintendo 3ds by: keeganatorr and Adopted by: Andr√© "Wolf3s" Guilherme
APP_AUTHOR := Wolf3s, keeganatorr, AryanWolf3d, AlumiuN, Mortriz Ripper and The other contribuitors
APP_VERSION := 2.3
ICON := icon_3ds/wolf4sdl.png
CC        = arm-none-eabi-gcc
#Audio System
LINKOBJ   += obj/dbopl.o obj/fmopl.o obj/opl3.o
#id Tech 1 Engine
LINKOBJ   += obj/id_ca.o obj/id_in.o obj/id_pm.o obj/id_sd.o obj/id_udp.o obj/id_us.o obj/id_vh.o obj/id_vieasm.o obj/id_vl.o obj/id_w3swrap.o 
#Misc Stuff
LINKOBJ   += obj/psnprntf.o obj/signon.o
#Wolf Files
LINKOBJ   += obj/wl_act1.o obj/wl_act2.o obj/wl_atmos.o obj/wl_agent.o obj/wl_cloudsky.o obj/wl_debug.o obj/wl_draw.o obj/wl_game.o \
obj/wl_inter.o obj/wl_main.o obj/wl_menu.o obj/wl_parallax.o obj/wl_plane.o obj/wl_play.o obj/wl_scale.o obj/wl_shade.o obj/wl_state.o \
obj/wl_text.o obj/wl_utils.o
DEFINES   = -D__3DS__ -DN3DS -DMATH -DWIP_N3DS -DUSE_INLINE_C89
ARCH = -march=armv6k -mfloat-abi=hard -mtune=mpcore -mtp=soft -fPIE
ARCH_LIBS      = -g -mword-relocations -ffunction-sections -march=armv6k -mfloat-abi=hard -mtune=mpcore -mtp=soft -fPIE
LIBS      = -specs=$(DEVKITPRO)/devkitARM/arm-none-eabi/lib/3dsx.specs $(ARCH_LIBS) -L$(DEVKITPRO)/libctru/lib -L$(DEVKITPRO)/portlibs/3ds/lib -lSDL_mixer -lmpg123 -lmodplug -lmad -lmikmod -lvorbisidec -logg -lopusfile -lopus `sdl-config --libs` -lm  -lstdc++
INCS      = -I3rdparty -Iaud_sys -Iaud_sys/doxbox/ -Iaud_sys/mame  -I$(DEVKITPRO)/portlibs/3ds/include/SDL -I$(DEVKITPRO)/libctru/include -I$(DEVKITPRO)/portlibs/3ds/include  
BUILD	  =	build
BIN       = release_n3ds/Wolf4SDL.elf
BINDIR	  = release_n3ds
CFLAGS    = $(INCS) $(DEFINES) -Wno-narrowing -Ofast -mword-relocations \
			-fomit-frame-pointer -ffunction-sections \
			-std=gnu99 -Wall -W -g \
			-Wpointer-arith -Wreturn-type -Wwrite-strings \
			-Wcast-align -Wimplicit-int -Wsequence-point $(ARCH)
GPROF     = gprof.exe
RM        = rm -f
LINK      = arm-none-eabi-gcc
3DSXTOOL  = $(DEVKITPRO)/tools/bin/3dsxtool
SMDHTOOL  = $(DEVKITPRO)/tools/bin/smdhtool
OUTPUT    = $(APP_TITLE)

export _3DSXDEPS	:=	$(if $(NO_SMDH),,$(OUTPUT).smdh)

ifeq ($(strip $(ICON)),)
	icons := $(wildcard *.png)
	ifneq (,$(findstring $(TARGET).png,$(icons)))
		export APP_ICON := $(TOPDIR)/$(TARGET).png
	else
		ifneq (,$(findstring icon.png,$(icons)))
			export APP_ICON := $(TOPDIR)/icon.png
		endif
	endif
else
	export APP_ICON := $(TOPDIR)/$(ICON)
endif

ifeq ($(strip $(NO_SMDH)),)
	export _3DSXFLAGS += --smdh=$(CURDIR)/$(TARGET).smdh
endif

.PHONY: all clean

all: release_n3ds/Wolf4SDL.3dsx

release_n3ds/Wolf4SDL.3dsx: $(3DSXTOOL) $(BIN) release_n3ds/Wolf4SDL.smdh
	$(3DSXTOOL) $(BIN) release_n3ds/Wolf4SDL.3dsx --smdh=release_n3ds/$(OUTPUT).smdh

$(BIN): $(LINKOBJ)
	$(LINK) $(LINKOBJ) -o "release_n3ds/Wolf4SDL.elf" $(LIBS)

release_n3ds/Wolf4SDL.smdh : $(ICON)
	$(SMDHTOOL) --create "$(APP_TITLE)" "$(APP_DESCRIPTION)" "$(APP_AUTHOR)" $(APP_ICON) release_n3ds/Wolf4SDL.smdh
	
clean: 
	rm -fr obj/ $(BIN)	
	
obj/dbopl.o: $(GLOBALDEPS) aud_sys/dosbox/dbopl.c
	@mkdir -p obj 
	$(CC) -c aud_sys/dosbox/dbopl.c -o obj/dbopl.o $(CFLAGS)

obj/fmopl.o: $(GLOBALDEPS) aud_sys/mame/fmopl.c  
	$(CC) -c aud_sys/mame/fmopl.c -o obj/fmopl.o $(CFLAGS)
	
obj/opl3.o: $(GLOBALDEPS) aud_sys/nukedopl3/opl3.c  
	$(CC) -c aud_sys/nukedopl3/opl3.c -o obj/opl3.o $(CFLAGS)	
	
obj/id_ca.o: $(GLOBALDEPS) id_ca.c
	$(CC) -c id_ca.c -o obj/id_ca.o $(CFLAGS)	

obj/id_in.o: $(GLOBALDEPS) id_in.c 
	$(CC) -c id_in.c -o obj/id_in.o $(CFLAGS)	

obj/id_pm.o: $(GLOBALDEPS) id_pm.c 
	$(CC) -c id_pm.c -o obj/id_pm.o $(CFLAGS)	 

obj/id_sd.o: $(GLOBALDEPS) id_sd.c 
	$(CC) -c id_sd.c -o obj/id_sd.o $(CFLAGS) 	

obj/id_udp.o: $(GLOBALDEPS) id_udp.c 
	$(CC) -c id_udp.c -o obj/id_udp.o $(CFLAGS)

obj/id_us.o: $(GLOBALDEPS) id_us.c 
	$(CC) -c id_us.c -o obj/id_us.o $(CFLAGS)	

obj/id_vh.o: $(GLOBALDEPS) id_vh.c 
	$(CC) -c id_vh.c -o obj/id_vh.o $(CFLAGS)
	
obj/id_vieasm.o: $(GLOBALDEPS) id_vieasm.c 
	$(CC) -c id_vieasm.c -o obj/id_vieasm.o $(CFLAGS) 	
	
obj/id_vl.o: $(GLOBALDEPS) id_vl.c wl_def.h 
	$(CC) -c id_vl.c -o obj/id_vl.o $(CFLAGS)	
	
obj/id_w3swrap.o: $(GLOBALDEPS) id_w3swrap.c  
	$(CC) -c id_w3swrap.c -o obj/id_w3swrap.o $(CFLAGS)			
		
obj/psnprntf.o: $(GLOBALDEPS) psnprntf.c  
	$(CC) -c psnprntf.c -o obj/psnprntf.o $(CFLAGS)		

obj/signon.o: $(GLOBALDEPS) signon.c 
	$(CC) -c signon.c -o obj/signon.o $(CFLAGS) 
	
obj/wl_act1.o: $(GLOBALDEPS) wl_act1.c 
	$(CC) -c wl_act1.c -o obj/wl_act1.o $(CFLAGS)

obj/wl_act2.o: $(GLOBALDEPS) wl_act2.c 
	$(CC) -c wl_act2.c -o obj/wl_act2.o $(CFLAGS)

obj/wl_atmos.o: $(GLOBALDEPS) wl_atmos.c 
	$(CC) -c wl_atmos.c -o obj/wl_atmos.o $(CFLAGS)

obj/wl_agent.o: $(GLOBALDEPS) wl_agent.c 
	$(CC) -c wl_agent.c -o obj/wl_agent.o $(CFLAGS)
	
obj/wl_cloudsky.o: $(GLOBALDEPS) wl_cloudsky.c  
	$(CC) -c wl_cloudsky.c -o obj/wl_cloudsky.o $(CFLAGS)

obj/wl_debug.o: $(GLOBALDEPS) wl_debug.c   
	$(CC) -c wl_debug.c -o obj/wl_debug.o $(CFLAGS)
	
obj/wl_draw.o: $(GLOBALDEPS) wl_draw.c 
	$(CC) -c wl_draw.c -o obj/wl_draw.o $(CFLAGS)
	
obj/wl_game.o: $(GLOBALDEPS) wl_game.c  
	$(CC) -c wl_game.c -o obj/wl_game.o $(CFLAGS)

obj/wl_inter.o: $(GLOBALDEPS) wl_inter.c  
	$(CC) -c wl_inter.c -o obj/wl_inter.o $(CFLAGS)	
	
obj/wl_main.o: $(GLOBALDEPS) wl_main.c 
	$(CC) -c wl_main.c -o obj/wl_main.o $(CFLAGS)	
	
obj/wl_menu.o: $(GLOBALDEPS) wl_menu.c  
	$(CC) -c wl_menu.c -o obj/wl_menu.o $(CFLAGS)	

obj/wl_parallax.o: $(GLOBALDEPS) wl_parallax.c
	$(CC) -c wl_parallax.c -o obj/wl_parallax.o $(CFLAGS)

obj/wl_plane.o: $(GLOBALDEPS) wl_plane.c
	$(CC) -c wl_plane.c -o obj/wl_plane.o $(CFLAGS)
	
obj/wl_play.o: $(GLOBALDEPS) wl_play.c
	$(CC) -c wl_play.c -o obj/wl_play.o $(CFLAGS)	

obj/wl_scale.o: $(GLOBALDEPS) wl_scale.c
	$(CC) -c wl_scale.c -o obj/wl_scale.o $(CFLAGS)	

obj/wl_shade.o: $(GLOBALDEPS) wl_shade.c
	$(CC) -c wl_shade.c -o obj/wl_shade.o $(CFLAGS)	
	
obj/wl_state.o: $(GLOBALDEPS) wl_state.c
	$(CC) -c wl_state.c -o obj/wl_state.o $(CFLAGS)		

obj/wl_text.o: $(GLOBALDEPS) wl_text.c
	$(CC) -c wl_text.c -o obj/wl_text.o $(CFLAGS)	

obj/wl_utils.o: $(GLOBALDEPS) wl_utils.c
	$(CC) -c wl_utils.c -o obj/wl_utils.o $(CFLAGS)	

#---------------------------------------------------------------------------------
# main targets
#---------------------------------------------------------------------------------

# end of Makefile ...
 